version: '2'
services:
    reverseproxy:
        build: 
            context: ./reverseproxy
            dockerfile: Dockerfile
        depends_on:
            - vue
            - flask
            - meta
            - embedding
            - classification
        ports:
            - 443:8081
            - 80:8080
        restart: always
    vue:
        build:
            context: ./frontend-demo
            dockerfile: Dockerfile
    flask:
        build:
            context: ./backend-demo
            dockerfile: Dockerfile
        volumes:
            - ./backend-demo:/usr/src/app
        links:      
           - postgres
    meta:
        build:
            context: ./metacomment-service
            dockerfile: Dockerfile
        volumes:
            - ./metacomment-service:/app
        links:      
            - postgres
#    mongo:
#        image: mongo:4.2.0
#        volumes:
#            - mongodb:/data/db
#        ports:
#            - 27017:27017
    postgres:
        image: "postgres:11.5"
        volumes:
            - postgres:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: omp
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        ports:
            - 5432:5432
#    offlang:
#        build:
#            context: ./offlang-service
#            dockerfile: Dockerfile
#        volumes:
#            - ./offlang-service:/app
#        links:
#            - mongo
    rabbitmq:
        image: rabbitmq
        ports:
        - 5672:5672
    classification:
        build:
            context: ./classification-service
            dockerfile: Dockerfile
        volumes:
            - ./classification-service:/app
            - ./classification-service/models:/app/models
        links:
            - postgres
            - rabbitmq
    embedding:
        build:
            context: ./embedding-service
            dockerfile: Dockerfile
        volumes:
            - ./embedding-service:/app
            - ./embedding-service/model:/app/model
        links:
            - postgres
            - rabbitmq
#    worker:
#        build:
#            context: ./embedding-service
#            dockerfile: Dockerfile
#        command: celery -A tasks worker --loglevel=info
#        depends_on:
#            - rabbitmq
#            - embedding
volumes:
    postgres:
