worker_processes 1;
 
events { worker_connections 1024; }
 
http {
 
    sendfile on;

    upstream docker-vue {
        server vue:8080;
    }

    upstream docker-flask-db {
        server flask:5050;
    }

    upstream docker-flask-meta {
        server meta:5060;
    }

    # upstream docker-flask-offlang {
    #     server offlang:5060;
    # }

    # upstream docker-flask-classification {
    #    server classification:5060;
    # }

    upstream docker-flask-embedding {
        server embedding:5060;
    }

    server {
        listen 8080 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }
 
    server {
        listen 8081 ssl http2 default_server;
        ssl on;
        ssl_certificate /etc/nginx/conf.d/cert.pem;
        ssl_certificate_key /etc/nginx/conf.d/key.pem;
        ssl_protocols               TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers                 ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256;
        ssl_prefer_server_ciphers   on;
        ssl_ecdh_curve              secp384r1;
 
        location / {
            proxy_pass         http://docker-vue;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }

        location /sockjs-node {
            proxy_pass http://docker-vue;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /api/meta {
            rewrite /api/meta/(.*) /$1  break;
            proxy_pass  http://docker-flask-meta;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Script-Name /api/meta;
        }

        # location /api/offlang {
        #     rewrite /api/offlang/(.*) /$1  break;
        #     proxy_pass  http://docker-flask-offlang;
        #     proxy_redirect     off;
        #     proxy_set_header   Host $host;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Scheme $scheme;
        #     proxy_set_header X-Script-Name /api/offlang;
        # }

        # location /api/classification {
        #     rewrite /api/classification/(.*) /$1  break;
        #     proxy_pass  http://docker-flask-classification;
        #     proxy_redirect     off;
        #     proxy_set_header   Host $host;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Scheme $scheme;
        #     proxy_set_header X-Script-Name /api/classification;
        # }

        location /api/embedding {
            rewrite /api/embedding/(.*) /$1  break;
            proxy_pass  http://docker-flask-embedding;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Script-Name /api/embedding;
        }

        location /api {
            rewrite /api/(.*) /$1  break;
            proxy_pass  http://docker-flask-db;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Script-Name /api;
        }
    }
}